# Script para criar release no GitHub usando API REST
$token = $env:GH_TOKEN
$owner = "L34NDR0-DEV"
$repo = "UBY--Sistemas"
$tag = "v1.0.1"
$name = "UBY Sistemas v1.0.1"
$body = @"
## üöÄ UBY Sistemas - Gest√£o de Agendamentos v1.0.1

### ‚ú® Novas Funcionalidades
- **Lixeira Autom√°tica**: Sistema inteligente de limpeza de dados antigos
- **Atalho R√°pido**: `Ctrl+Shift+Delete` para limpeza autom√°tica
- **Interface Melhorada**: Nova interface da lixeira com melhor usabilidade

### üîß Melhorias
- Sistema de atualiza√ß√µes otimizado
- Corre√ß√µes de bugs menores
- Performance aprimorada

### üì• Instala√ß√£o
Baixe o arquivo de instala√ß√£o e execute como administrador.

### üîÑ Atualiza√ß√µes
Este release habilita o sistema de atualiza√ß√µes autom√°ticas da aplica√ß√£o.
"@

# Headers para autentica√ß√£o
$headers = @{
    "Authorization" = "token $token"
    "Accept" = "application/vnd.github.v3+json"
    "User-Agent" = "UBY-Agendamentos-Release-Script"
}

# Dados do release
$releaseData = @{
    tag_name = $tag
    target_commitish = "main"
    name = $name
    body = $body
    draft = $false
    prerelease = $false
} | ConvertTo-Json

try {
    Write-Host "Criando release $tag no GitHub..." -ForegroundColor Cyan
    
    # Criar release
    $uri = "https://api.github.com/repos/$owner/$repo/releases"
    $response = Invoke-RestMethod -Uri $uri -Method Post -Headers $headers -Body $releaseData -ContentType "application/json"
    
    Write-Host "‚úÖ Release criado com sucesso!" -ForegroundColor Green
    Write-Host "üîó URL: $($response.html_url)" -ForegroundColor Cyan
    Write-Host "üì¶ ID: $($response.id)" -ForegroundColor Yellow
    
    # Salvar informa√ß√µes do release
    $response | ConvertTo-Json | Out-File "release-info.json"
    
} catch {
    Write-Host "‚ùå Erro ao criar release: $($_.Exception.Message)" -ForegroundColor Red
    if ($_.Exception.Response) {
        $errorResponse = $_.Exception.Response.GetResponseStream()
        $reader = New-Object System.IO.StreamReader($errorResponse)
        $errorBody = $reader.ReadToEnd()
        Write-Host "Detalhes do erro: $errorBody" -ForegroundColor Red
    }
}